PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "active_admin_comments" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "admin_users" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "announcements" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "publish_on" datetime NOT NULL, "message" varchar, "people" varchar NOT NULL, "company" varchar, "announcement_id" varchar NOT NULL, "location_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "daily_event_summaries" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "source" varchar NOT NULL, "day" date NOT NULL, "count" integer NOT NULL, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "developer_users" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "public_key" text NOT NULL, "git_handle" varchar NOT NULL, "slack_handle" varchar NOT NULL, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "events" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "source" varchar, "external_id" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "locations" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "latitude" float NOT NULL, "longitude" float NOT NULL, "city_name" varchar NOT NULL, "time_zone" varchar NOT NULL, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL, "wifi_name" varchar, "wifi_password" varchar, "bathroom_code" varchar);
CREATE TABLE IF NOT EXISTS "traffic_cams" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar NOT NULL, "url" varchar NOT NULL, "location_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL, "feed_format" varchar DEFAULT 'image' NOT NULL);
CREATE TABLE IF NOT EXISTS "users" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "user_name" varchar NOT NULL, "public_key" text NOT NULL, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "widgets" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar NOT NULL, "enabled" boolean NOT NULL, "duration_seconds" integer NOT NULL, "position" integer NOT NULL, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL, "location_id" bigint, "start" varchar, "stop" varchar, "sidebar_text" varchar, "show_weather" boolean);
CREATE TABLE IF NOT EXISTS "admin_users_tokens" ("id" integer NOT NULL PRIMARY KEY, "admin_users_id" integer DEFAULT NULL, "token" blob NOT NULL, "context" varchar NOT NULL, "sent_to" varchar DEFAULT NULL, "created_at" datetime NOT NULL, CONSTRAINT "fk_rails_517d2336ba"
FOREIGN KEY ("admin_users_id")
  REFERENCES "admin_users" ("id")
 ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY);
INSERT INTO schema_migrations VALUES('20220401182425');
INSERT INTO schema_migrations VALUES('20180511135827');
INSERT INTO schema_migrations VALUES('20180518190226');
INSERT INTO schema_migrations VALUES('20180627142450');
INSERT INTO schema_migrations VALUES('20181221194808');
INSERT INTO schema_migrations VALUES('20190517184255');
INSERT INTO schema_migrations VALUES('20190522181138');
INSERT INTO schema_migrations VALUES('20190531061410');
INSERT INTO schema_migrations VALUES('20190604172236');
INSERT INTO schema_migrations VALUES('20190823182602');
INSERT INTO schema_migrations VALUES('20190823192258');
INSERT INTO schema_migrations VALUES('20200110220901');
INSERT INTO schema_migrations VALUES('20200110224801');
INSERT INTO schema_migrations VALUES('20210405184534');
INSERT INTO schema_migrations VALUES('20210527193617');
INSERT INTO schema_migrations VALUES('20210527202246');
INSERT INTO schema_migrations VALUES('20210607180232');
INSERT INTO schema_migrations VALUES('20210607180242');
INSERT INTO schema_migrations VALUES('20210712211847');
INSERT INTO schema_migrations VALUES('20211220181834');
INSERT INTO schema_migrations VALUES('20220217225447');
INSERT INTO schema_migrations VALUES('20220302163416');
CREATE TABLE IF NOT EXISTS "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL);
INSERT INTO ar_internal_metadata VALUES('environment','test','2022-04-01 19:34:58.705422','2022-04-01 19:34:58.707264');
INSERT INTO ar_internal_metadata VALUES('schema_sha1','901d63178e6428a481708ff761b5e876caa778bf','2022-04-01 19:34:58.709583','2022-04-01 19:34:58.709583');
DELETE FROM sqlite_sequence;
CREATE INDEX "index_active_admin_comments_on_author" ON "active_admin_comments" ("author_type", "author_id");
CREATE INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace");
CREATE INDEX "index_active_admin_comments_on_resource" ON "active_admin_comments" ("resource_type", "resource_id");
CREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email");
CREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token");
CREATE INDEX "index_announcements_on_location_id" ON "announcements" ("location_id");
CREATE UNIQUE INDEX "index_events_on_source_and_external_id" ON "events" ("source", "external_id");
CREATE UNIQUE INDEX "index_locations_on_city_name" ON "locations" ("city_name");
CREATE INDEX "index_traffic_cams_on_location_id" ON "traffic_cams" ("location_id");
CREATE UNIQUE INDEX "index_widgets_on_location_id_and_name" ON "widgets" ("location_id", "name");
CREATE UNIQUE INDEX "index_widgets_on_location_id_and_position" ON "widgets" ("location_id", "position");
CREATE INDEX "index_widgets_on_location_id" ON "widgets" ("location_id");
CREATE INDEX "index_admin_users_tokens_on_admin_user_id" ON "admin_users_tokens" ("admin_user_id");
CREATE INDEX "index_admin_users_tokens_on_admin_users_id" ON "admin_users_tokens" ("admin_users_id");
CREATE UNIQUE INDEX "index_admin_users_tokens_on_context_and_token" ON "admin_users_tokens" ("context", "token");
COMMIT;
